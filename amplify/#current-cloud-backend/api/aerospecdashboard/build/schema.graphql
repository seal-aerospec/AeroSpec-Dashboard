type frontendteamschema {
  id: ID!
  Battery: String!
  Date: String!
  Env_PM_smaller_than_1_0: String!
  Env_PM_smaller_than_10: String!
  Env_PM_smaller_than_2_5: String!
  equiv_CO2_ppm: String!
  Latitude: String!
  Longitude: String!
  Particle_Count_0_3um: String!
  PC_0_5um: String!
  PC_1_0num: String!
  PC_10um: String!
  PC_2_5um: String!
  PC_5um: String!
  Relative_Humidity: String!
  Serial_Number: String!
  Temperature_c: String!
  Time: String!
  total_VoC_ppb: String!
  Wifi_Strength: String!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelfrontendteamschemaConnection {
  items: [frontendteamschema]
  nextToken: String
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

input ModelfrontendteamschemaFilterInput {
  id: ModelIDInput
  Battery: ModelStringInput
  Date: ModelStringInput
  Env_PM_smaller_than_1_0: ModelStringInput
  Env_PM_smaller_than_10: ModelStringInput
  Env_PM_smaller_than_2_5: ModelStringInput
  equiv_CO2_ppm: ModelStringInput
  Latitude: ModelStringInput
  Longitude: ModelStringInput
  Particle_Count_0_3um: ModelStringInput
  PC_0_5um: ModelStringInput
  PC_1_0num: ModelStringInput
  PC_10um: ModelStringInput
  PC_2_5um: ModelStringInput
  PC_5um: ModelStringInput
  Relative_Humidity: ModelStringInput
  Serial_Number: ModelStringInput
  Temperature_c: ModelStringInput
  Time: ModelStringInput
  total_VoC_ppb: ModelStringInput
  Wifi_Strength: ModelStringInput
  and: [ModelfrontendteamschemaFilterInput]
  or: [ModelfrontendteamschemaFilterInput]
  not: ModelfrontendteamschemaFilterInput
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

type Query {
  getFrontendteamschema(id: ID!): frontendteamschema
  listFrontendteamschemas(filter: ModelfrontendteamschemaFilterInput, limit: Int, nextToken: String): ModelfrontendteamschemaConnection
}

input CreateFrontendteamschemaInput {
  id: ID
  Battery: String!
  Date: String!
  Env_PM_smaller_than_1_0: String!
  Env_PM_smaller_than_10: String!
  Env_PM_smaller_than_2_5: String!
  equiv_CO2_ppm: String!
  Latitude: String!
  Longitude: String!
  Particle_Count_0_3um: String!
  PC_0_5um: String!
  PC_1_0num: String!
  PC_10um: String!
  PC_2_5um: String!
  PC_5um: String!
  Relative_Humidity: String!
  Serial_Number: String!
  Temperature_c: String!
  Time: String!
  total_VoC_ppb: String!
  Wifi_Strength: String!
}

input UpdateFrontendteamschemaInput {
  id: ID!
  Battery: String
  Date: String
  Env_PM_smaller_than_1_0: String
  Env_PM_smaller_than_10: String
  Env_PM_smaller_than_2_5: String
  equiv_CO2_ppm: String
  Latitude: String
  Longitude: String
  Particle_Count_0_3um: String
  PC_0_5um: String
  PC_1_0num: String
  PC_10um: String
  PC_2_5um: String
  PC_5um: String
  Relative_Humidity: String
  Serial_Number: String
  Temperature_c: String
  Time: String
  total_VoC_ppb: String
  Wifi_Strength: String
}

input DeleteFrontendteamschemaInput {
  id: ID
}

type Mutation {
  createFrontendteamschema(input: CreateFrontendteamschemaInput!, condition: ModelfrontendteamschemaConditionInput): frontendteamschema
  updateFrontendteamschema(input: UpdateFrontendteamschemaInput!, condition: ModelfrontendteamschemaConditionInput): frontendteamschema
  deleteFrontendteamschema(input: DeleteFrontendteamschemaInput!, condition: ModelfrontendteamschemaConditionInput): frontendteamschema
}

input ModelfrontendteamschemaConditionInput {
  Battery: ModelStringInput
  Date: ModelStringInput
  Env_PM_smaller_than_1_0: ModelStringInput
  Env_PM_smaller_than_10: ModelStringInput
  Env_PM_smaller_than_2_5: ModelStringInput
  equiv_CO2_ppm: ModelStringInput
  Latitude: ModelStringInput
  Longitude: ModelStringInput
  Particle_Count_0_3um: ModelStringInput
  PC_0_5um: ModelStringInput
  PC_1_0num: ModelStringInput
  PC_10um: ModelStringInput
  PC_2_5um: ModelStringInput
  PC_5um: ModelStringInput
  Relative_Humidity: ModelStringInput
  Serial_Number: ModelStringInput
  Temperature_c: ModelStringInput
  Time: ModelStringInput
  total_VoC_ppb: ModelStringInput
  Wifi_Strength: ModelStringInput
  and: [ModelfrontendteamschemaConditionInput]
  or: [ModelfrontendteamschemaConditionInput]
  not: ModelfrontendteamschemaConditionInput
}

type Subscription {
  onCreateFrontendteamschema: frontendteamschema @aws_subscribe(mutations: ["createFrontendteamschema"])
  onUpdateFrontendteamschema: frontendteamschema @aws_subscribe(mutations: ["updateFrontendteamschema"])
  onDeleteFrontendteamschema: frontendteamschema @aws_subscribe(mutations: ["deleteFrontendteamschema"])
}
